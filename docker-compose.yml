services:
  hub:
    image: &hub-image ghcr.io/debeule/news-analytics-dock/hub:latest
    build:
      context: .
      dockerfile: deploy/components/hub/workspace.Dockerfile
    container_name: hub
    restart: unless-stopped
    tty: true
    volumes: &hub-volumes
      - ./hub:/code:delegated
      - ./deploy/components/hub/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - backend
    depends_on:
      - db
      - db-testing
      - worker
      - redis

  scraper:
    image: ghcr.io/debeule/news-analytics-dock/scraper:latest
    build:
        context: .
        dockerfile: deploy/components/scraper/workspace.Dockerfile
    container_name: scraper
    restart: unless-stopped
    tty: true
    volumes:
        - ./scraper:/code:delegated
    ports:
        - "5000:5000"
    networks:
        - backend
    depends_on:
        - db
        - redis

  server:
    image: nginx:alpine
    container_name: server
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./hub:/code:delegated
      - ./deploy/components/server/nginx/conf.d/local.conf:/etc/nginx/conf.d/default.conf:delegated
    networks:
      - backend
    depends_on:
      - hub

  db:
    image: &db-image mysql:8.0
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment: &db-environment
      MYSQL_DATABASE: news-analytics
      MYSQL_ROOT_PASSWORD: news-analytics
      MYSQL_ROOT_HOST: '%'
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - backend

  db-testing:
    image: *db-image
    container_name: db-testing
    restart: unless-stopped
    environment: *db-environment
    tty: true
    ports:
      - 3307:3306
    volumes:
      - dbdata-testing:/var/lib/mysql
    networks:
      - backend

  cron:
    image: ghcr.io/debeule/news-analytics-dock/cron:latest
    build:
      context: .
      dockerfile: deploy/components/cron/workspace.Dockerfile
    container_name: cron
    restart: unless-stopped
    volumes: *hub-volumes
    tty: true
    networks:
      - backend

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - 6379:6379
    restart: unless-stopped
    volumes:
      - ./deploy/components/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - backend

  worker:
    image: *hub-image
    container_name: worker
    entrypoint: php artisan queue:work --timeout=300
    restart:  unless-stopped
    tty: true
    volumes: *hub-volumes
    networks:
      - backend
    depends_on:
      - db
      - db-testing
      - redis

networks:
  backend:
    driver: bridge

volumes:
  dbdata:
    driver: local
  dbdata-testing:
    driver: local
    